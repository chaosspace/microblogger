{"ast":null,"code":"var _jsxFileName = \"E:\\\\FontEndCode\\\\microblogger\\\\src\\\\pages\\\\specials\\\\changeImg\\\\Upload.jsx\",\n    _s = $RefreshSig$();\n\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport { message, Upload } from 'antd';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getBase64 = (img, callback) => {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n};\n\nconst beforeUpload = file => {\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\n  if (!isJpgOrPng) {\n    message.error('You can only upload JPG/PNG file!');\n  }\n\n  const isLt2M = file.size / 1024 / 1024 < 2;\n\n  if (!isLt2M) {\n    message.error('Image must smaller than 2MB!');\n  }\n\n  return isJpgOrPng && isLt2M;\n};\n\nconst App = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [imageUrl, setImageUrl] = useState();\n\n  const handleChange = info => {\n    if (info.file.status === 'uploading') {\n      setLoading(true);\n      return;\n    }\n\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, url => {\n        setLoading(false);\n        setImageUrl(url);\n      });\n    }\n  };\n\n  const uploadButton = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading ? /*#__PURE__*/_jsxDEV(LoadingOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 40\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 8\n      },\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Upload, {\n    name: \"avatar\",\n    listType: \"picture-card\",\n    className: \"avatar-uploader\",\n    showUploadList: false,\n    action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n    beforeUpload: beforeUpload,\n    onChange: handleChange,\n    children: imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: \"avatar\",\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : uploadButton\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ycwfokvvRN06VWzgWJtQm3IhTUc=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["LoadingOutlined","PlusOutlined","message","Upload","React","useState","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","file","isJpgOrPng","type","error","isLt2M","size","App","loading","setLoading","imageUrl","setImageUrl","handleChange","info","status","originFileObj","url","uploadButton","marginTop","width"],"sources":["E:/FontEndCode/microblogger/src/pages/specials/changeImg/Upload.jsx"],"sourcesContent":["import { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport { message, Upload } from 'antd';\r\nimport React, { useState } from 'react';\r\n\r\nconst getBase64 = (img, callback) => {\r\n  const reader = new FileReader();\r\n  reader.addEventListener('load', () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n};\r\n\r\nconst beforeUpload = (file) => {\r\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\r\n  if (!isJpgOrPng) {\r\n    message.error('You can only upload JPG/PNG file!');\r\n  }\r\n\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n\r\n  if (!isLt2M) {\r\n    message.error('Image must smaller than 2MB!');\r\n  }\r\n\r\n  return isJpgOrPng && isLt2M;\r\n};\r\n\r\nconst App = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [imageUrl, setImageUrl] = useState();\r\n\r\n  const handleChange = (info) => {\r\n    if (info.file.status === 'uploading') {\r\n      setLoading(true);\r\n      return;\r\n    }\r\n\r\n    if (info.file.status === 'done') {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, (url) => {\r\n        setLoading(false);\r\n        setImageUrl(url);\r\n      });\r\n    }\r\n  };\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div\r\n        style={{\r\n          marginTop: 8,\r\n        }}\r\n      >\r\n        Upload\r\n      </div>\r\n    </div>\r\n  );\r\n  return (\r\n    <Upload\r\n      name=\"avatar\"\r\n      listType=\"picture-card\"\r\n      className=\"avatar-uploader\"\r\n      showUploadList={false}\r\n      action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n      beforeUpload={beforeUpload}\r\n      onChange={handleChange}\r\n    >\r\n      {imageUrl ? (\r\n        <img\r\n          src={imageUrl}\r\n          alt=\"avatar\"\r\n          style={{\r\n            width: '100%',\r\n          }}\r\n        />\r\n      ) : (\r\n        uploadButton\r\n      )}\r\n    </Upload>\r\n  );\r\n};"],"mappings":";;;AAAA,SAASA,eAAT,EAA0BC,YAA1B,QAA8C,mBAA9C;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,MAAhC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,SAAS,GAAG,CAACC,GAAD,EAAMC,QAAN,KAAmB;EACnC,MAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;EACAD,MAAM,CAACE,gBAAP,CAAwB,MAAxB,EAAgC,MAAMH,QAAQ,CAACC,MAAM,CAACG,MAAR,CAA9C;EACAH,MAAM,CAACI,aAAP,CAAqBN,GAArB;AACD,CAJD;;AAMA,MAAMO,YAAY,GAAIC,IAAD,IAAU;EAC7B,MAAMC,UAAU,GAAGD,IAAI,CAACE,IAAL,KAAc,YAAd,IAA8BF,IAAI,CAACE,IAAL,KAAc,WAA/D;;EAEA,IAAI,CAACD,UAAL,EAAiB;IACfd,OAAO,CAACgB,KAAR,CAAc,mCAAd;EACD;;EAED,MAAMC,MAAM,GAAGJ,IAAI,CAACK,IAAL,GAAY,IAAZ,GAAmB,IAAnB,GAA0B,CAAzC;;EAEA,IAAI,CAACD,MAAL,EAAa;IACXjB,OAAO,CAACgB,KAAR,CAAc,8BAAd;EACD;;EAED,OAAOF,UAAU,IAAIG,MAArB;AACD,CAdD;;AAgBA,MAAME,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,EAAxC;;EAEA,MAAMqB,YAAY,GAAIC,IAAD,IAAU;IAC7B,IAAIA,IAAI,CAACZ,IAAL,CAAUa,MAAV,KAAqB,WAAzB,EAAsC;MACpCL,UAAU,CAAC,IAAD,CAAV;MACA;IACD;;IAED,IAAII,IAAI,CAACZ,IAAL,CAAUa,MAAV,KAAqB,MAAzB,EAAiC;MAC/B;MACAtB,SAAS,CAACqB,IAAI,CAACZ,IAAL,CAAUc,aAAX,EAA2BC,GAAD,IAAS;QAC1CP,UAAU,CAAC,KAAD,CAAV;QACAE,WAAW,CAACK,GAAD,CAAX;MACD,CAHQ,CAAT;IAID;EACF,CAbD;;EAeA,MAAMC,YAAY,gBAChB;IAAA,WACGT,OAAO,gBAAG,QAAC,eAAD;MAAA;MAAA;MAAA;IAAA,QAAH,gBAAyB,QAAC,YAAD;MAAA;MAAA;MAAA;IAAA,QADnC,eAEE;MACE,KAAK,EAAE;QACLU,SAAS,EAAE;MADN,CADT;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;;EAYA,oBACE,QAAC,MAAD;IACE,IAAI,EAAC,QADP;IAEE,QAAQ,EAAC,cAFX;IAGE,SAAS,EAAC,iBAHZ;IAIE,cAAc,EAAE,KAJlB;IAKE,MAAM,EAAC,kDALT;IAME,YAAY,EAAElB,YANhB;IAOE,QAAQ,EAAEY,YAPZ;IAAA,UASGF,QAAQ,gBACP;MACE,GAAG,EAAEA,QADP;MAEE,GAAG,EAAC,QAFN;MAGE,KAAK,EAAE;QACLS,KAAK,EAAE;MADF;IAHT;MAAA;MAAA;MAAA;IAAA,QADO,GASPF;EAlBJ;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD,CAtDD;;GAAMV,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}