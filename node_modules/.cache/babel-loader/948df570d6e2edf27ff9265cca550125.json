{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { httpReq } from \"../../tool/httpReq\";\nimport passagesCss from \"./passages.module.css\";\nexport default function Passages() {\n  _s();\n\n  //状态初始化\n  const [state, setstate] = useState({\n    isloading: true\n  }); //获取search参数\n\n  const [searchParams] = useSearchParams();\n  const passageId = searchParams.get(\"id\"); //组件挂载时请求数据\n\n  useEffect(() => {\n    //发送请求获取文章数据\n    httpReq(\"get\", `/publish/article?articleId=${passageId}`).then(res => {\n      //将结果存在状态中，并且将是否加载中改为否\n      setstate({\n        data: res.data,\n        isloading: false\n      });\n    }, err => console.log(err));\n  }, []);\n\n  if (!state.isloading) {\n    const {\n      columnTitle,\n      content,\n      articleTitle,\n      createDate\n    } = state.data.article;\n    const {\n      username,\n      headUrl\n    } = state.data.user; // return (\n    //   <div className={passagesCss.container}>\n    //     <div className={passagesCss.header}>\n    //       <div>关注</div>\n    //       <div>推荐</div>\n    //     </div>\n    //     <div className={passagesCss.specialsTitle}>{columnTitle}</div>\n    //     <div className={passagesCss.passagesWraper}>\n    //       <div className={passagesCss.passagesTitle}>{articleTitle}</div>\n    //       <span className={passagesCss.authorInfo}>\n    //         <span className={passagesCss.avatar}>\n    //         <img style={{width:'53px', height:'53px',borderRadius:'50%'}} src={headUrl} alt=\"nosource\" />\n    //         </span>\n    //         <span className={passagesCss.name}>{username}</span>\n    //         <span className={passagesCss.creatingTime}>{createDate}</span>\n    //       </span>\n    //       <div className={passagesCss.passagesContent}>\n    //         {content}\n    //       </div>\n    //     </div>\n    //   </div>\n    // );\n  }\n}\n\n_s(Passages, \"4sdA2KY4jm2w75j/nKOO6bWnELo=\", false, function () {\n  return [useSearchParams];\n});\n\n_c = Passages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Passages\");","map":{"version":3,"names":["React","useEffect","useState","useSearchParams","httpReq","passagesCss","Passages","state","setstate","isloading","searchParams","passageId","get","then","res","data","err","console","log","columnTitle","content","articleTitle","createDate","article","username","headUrl","user"],"sources":["E:/FontEndCode/microblogger/src/pages/passages/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nimport { httpReq } from \"../../tool/httpReq\";\r\nimport passagesCss from \"./passages.module.css\";\r\n\r\nexport default function Passages() {\r\n  //状态初始化\r\n  const [state, setstate] = useState({isloading:true});\r\n  //获取search参数\r\n  const [searchParams] = useSearchParams();\r\n  const passageId = searchParams.get(\"id\");\r\n  //组件挂载时请求数据\r\n  useEffect(() => {\r\n    //发送请求获取文章数据\r\n    httpReq(\"get\", `/publish/article?articleId=${passageId}`).then(\r\n      (res) => {\r\n        //将结果存在状态中，并且将是否加载中改为否\r\n        setstate({data:res.data, isloading:false})\r\n      },\r\n      (err) => console.log(err)\r\n    );\r\n  },[]);\r\n  if(!state.isloading){\r\n    const { columnTitle, content, articleTitle, createDate } = state.data.article\r\n    const { username, headUrl } = state.data.user\r\n    // return (\r\n    //   <div className={passagesCss.container}>\r\n    //     <div className={passagesCss.header}>\r\n    //       <div>关注</div>\r\n    //       <div>推荐</div>\r\n    //     </div>\r\n    //     <div className={passagesCss.specialsTitle}>{columnTitle}</div>\r\n    //     <div className={passagesCss.passagesWraper}>\r\n    //       <div className={passagesCss.passagesTitle}>{articleTitle}</div>\r\n    //       <span className={passagesCss.authorInfo}>\r\n    //         <span className={passagesCss.avatar}>\r\n    //         <img style={{width:'53px', height:'53px',borderRadius:'50%'}} src={headUrl} alt=\"nosource\" />\r\n    //         </span>\r\n    //         <span className={passagesCss.name}>{username}</span>\r\n    //         <span className={passagesCss.creatingTime}>{createDate}</span>\r\n    //       </span>\r\n    //       <div className={passagesCss.passagesContent}>\r\n    //         {content}\r\n    //       </div>\r\n    //     </div>\r\n    //   </div>\r\n    // );\r\n  }\r\n}"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,eAAT,QAAgC,kBAAhC;AAEA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AAEA,eAAe,SAASC,QAAT,GAAoB;EAAA;;EACjC;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC;IAACO,SAAS,EAAC;EAAX,CAAD,CAAlC,CAFiC,CAGjC;;EACA,MAAM,CAACC,YAAD,IAAiBP,eAAe,EAAtC;EACA,MAAMQ,SAAS,GAAGD,YAAY,CAACE,GAAb,CAAiB,IAAjB,CAAlB,CALiC,CAMjC;;EACAX,SAAS,CAAC,MAAM;IACd;IACAG,OAAO,CAAC,KAAD,EAAS,8BAA6BO,SAAU,EAAhD,CAAP,CAA0DE,IAA1D,CACGC,GAAD,IAAS;MACP;MACAN,QAAQ,CAAC;QAACO,IAAI,EAACD,GAAG,CAACC,IAAV;QAAgBN,SAAS,EAAC;MAA1B,CAAD,CAAR;IACD,CAJH,EAKGO,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALX;EAOD,CATQ,EASP,EATO,CAAT;;EAUA,IAAG,CAACT,KAAK,CAACE,SAAV,EAAoB;IAClB,MAAM;MAAEU,WAAF;MAAeC,OAAf;MAAwBC,YAAxB;MAAsCC;IAAtC,IAAqDf,KAAK,CAACQ,IAAN,CAAWQ,OAAtE;IACA,MAAM;MAAEC,QAAF;MAAYC;IAAZ,IAAwBlB,KAAK,CAACQ,IAAN,CAAWW,IAAzC,CAFkB,CAGlB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACD;AACF;;GA3CuBpB,Q;UAICH,e;;;KAJDG,Q"},"metadata":{},"sourceType":"module"}